# Define a function to shuffle a list without using built-in shuffle
def manual_shuffle(lst):
    # A simple pseudo shuffle by swapping elements manually based on a simple algorithm
    n = len(lst)
    for i in range(n):
        # Swap current element with element at position (n - i - 1)
        j = (n - i - 1)
        lst[i], lst[j] = lst[j], lst[i]
    return lst

# Function to run the quiz program
def quiz():
    questions = [
        {
            "question": "What is the capital of France?",
            "options": ["1) Berlin", "2) London", "3) Paris", "4) Madrid"],
            "answer": 3
        },
        {
            "question": "Which planet is known as the Red Planet?",
            "options": ["1) Earth", "2) Mars", "3) Jupiter", "4) Venus"],
            "answer": 2
        },
        {
            "question": "What is the largest mammal?",
            "options": ["1) Elephant", "2) Blue Whale", "3) Giraffe", "4) Hippo"],
            "answer": 2
        },
        {
            "question": "Who wrote 'Romeo and Juliet'?",
            "options": ["1) Charles Dickens", "2) William Shakespeare", "3) Mark Twain", "4) Jane Austen"],
            "answer": 2
        },
        {
            "question": "What is the boiling point of water in Celsius?",
            "options": ["1) 90", "2) 80", "3) 100", "4) 110"],
            "answer": 3
        },
        {
            "question": "Which gas do plants absorb from the atmosphere?",
            "options": ["1) Oxygen", "2) Carbon Dioxide", "3) Nitrogen", "4) Hydrogen"],
            "answer": 2
        },
        {
            "question": "How many continents are there?",
            "options": ["1) Five", "2) Six", "3) Seven", "4) Eight"],
            "answer": 3
        },
        {
            "question": "What is the square root of 64?",
            "options": ["1) 6", "2) 7", "3) 8", "4) 9"],
            "answer": 3
        },
        {
            "question": "Who is known as the Father of Computers?",
            "options": ["1) Alan Turing", "2) Charles Babbage", "3) Bill Gates", "4) Steve Jobs"],
            "answer": 2
        },
        {
            "question": "What color do you get when you mix red and white?",
            "options": ["1) Pink", "2) Purple", "3) Orange", "4) Brown"],
            "answer": 1
        }
    ]

    # Shuffle the questions list manually
    questions = manual_shuffle(questions)

    score = 0
    missed = []

    # Let user pick questions by their original number 1-10 (but we shuffled internally)
    # We need to map question numbers 1-10 to shuffled questions
    # To make sense, show the question number asked and ask user input

    asked_questions = []

    while len(asked_questions) < len(questions):
        print("\nEnter a question number to answer (1-10), or 0 to quit:")
        try:
            q_num = int(input())
        except ValueError:
            print("Invalid input. Please enter a number from 1 to 10.")
            continue
        if q_num == 0:
            break
        if q_num < 1 or q_num > 10:
            print("Please enter a valid number between 1 and 10.")
            continue
        if q_num in asked_questions:
            print("You already answered this question. Pick another one.")
            continue

        # Access the question based on index q_num - 1 but remember we shuffled the order
        # So q_num means original question number, but we shuffled questions
        # To match requirement, let's associate q_num with the original question in the list

        # The user wants the question by number 1-10, so we should show the question at original index q_num-1
        # But we shuffled the questions, so we need to keep a mapping from original index to shuffled list

        # Let's create this mapping at start: original_index -> shuffled_question
        # But since we shuffled the list, the original indexes are lost, so let's do this before shuffle

        # Change approach:
        # Let's store questions as a list of tuples (original_index, question_dict)
        # Then shuffle that list, and allow user to select by original_index

    # --- restart with mapping for better logic ---

def quiz_final():
    # Original questions with index
    questions = [
        (1, {
            "question": "What is the capital of France?",
            "options": ["1) Berlin", "2) London", "3) Paris", "4) Madrid"],
            "answer": 3
        }),
        (2, {
            "question": "Which planet is known as the Red Planet?",
            "options": ["1) Earth", "2) Mars", "3) Jupiter", "4) Venus"],
